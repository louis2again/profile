/*Step 2: Selectors
Any time you want to name an element of your page, ask yourself:
- Should I use a class or an id? Is it unique or re-usable?
- What name should I pick for my class? Respect the component-shape convention
- Should I split this design into several classes instead of one big class?

Making an image circle and centering texts are very common design tasks.
They deserve their own re-usable class, not to be mixed in other classes or ids!
Don't repeat yourself and try to use generic class names. Consider each
CSS class as a re-usable design that you can apply everywhere on your website.
Getting this mindset is the main difficulty for CSS beginners.*/

body {
  background: #90daee17;
  background-image: url("images/surfski.jpg");
  position: relative;
  background-size: cover;
  background-position: center;
  color: #2b2b2e;
  font-family: 'Quicksand';
  font-size: 15px;
  font-weight: lighter;
}
@media (max-width: 960px) {
  /* For a screen < 960px, this CSS will be read */
  .container {
    width: 700px;
  }
}
@media (max-width: 720px) {
  /* For a screen < 720px, this CSS will be read */
  .container {
    width: 500px;
  }
}
@media (max-width: 540px) {
  /* For a screen < 540px, this CSS will be read */
  .container {
    width: 300px;
  }
}

h1, h2, h3 {
  font-family: 'Quicksand', sans-serif;
}
h1 {
  color: #2b2b2e;
  font-size: 32px;
  font-weight: 900;
}
h2 {
  color: #1643cd;
  font-size: 20px;
  font-weight: lighter;
  font-weight: 500;
}

a {
  font-family: 'Roboto', sans-serif;
  text-decoration: none;
  color: #6B72E1;
  font-weight: 600;
  font-size: 16px;
}

a:hover {
  color: black;
}

.img-circle {
  border-radius: 8px;
  border: 1px solid darkgrey;

}
.text-center {
  text-align: center;
}

.card-white {
  background-color: white;
  opacity: 0.7;
  padding: 10px;
  box-shadow: 0px 10px 30px rgba(0,0,0,0.1);
  border-radius: 4px;
  margin: 20px 0px;
  margin-top: 20px;
  margin-right: 150px;
  margin-bottom: 20px;
  margin-left: 150px;
}

.list-inline {
  list-style: none;
  padding-left: 0px;
}

.btn-blue {
  background-color: #1643cd;
  color: white;
  padding: 3px 10px;
  border-radius: 4px;
}
